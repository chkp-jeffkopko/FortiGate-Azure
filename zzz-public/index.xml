<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fortinet FortiGate SDWAN on Fortinet FortiGate Technical Recipie- Azure SDWAN</title>
    <link>/</link>
    <description>Recent content in Fortinet FortiGate SDWAN on Fortinet FortiGate Technical Recipie- Azure SDWAN</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Check Point CGNS Intro</title>
      <link>/intro.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/intro.html</guid>
      <description>Check Point CGNS Workshop - Intro Welcome In this workshop you will learn how to deploy Check Point CGNS with AWS Gateway load balancer as well as architecture options to support 3 different traffic flows: outbound, east-west, and inbound.</description>
    </item>
    
    <item>
      <title>Task 1 - FortiGate on Hub LB</title>
      <link>/02demo1/2_task1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02demo1/2_task1.html</guid>
      <description>Task 1 - Add the FortiGates to the Hub Load Balancer Backend Pool Select the Hub External Load Balancer sdwan-USERXX-workshop-hub1-elb1 Click on Backend pools Add FortiGate1 and FortiGate2 port1 interfaces and then click on Save 10.10.0.4
10.10.0.5</description>
    </item>
    
    <item>
      <title>Task 1 Setup Azure CloudShell</title>
      <link>/01gettingstarted/2_task1.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01gettingstarted/2_task1.html</guid>
      <description>Task 1 - Setup your AzureCloud Shell Login to Azure Cloud Portal https://portal.azure.com/ with the provided login/password
Click on Cloud Shell icon on the Top Right side of the portal
Select Bash
Click on Show advanced settings
Select
Use existing Resource Group - it should auto populate with USERXX-workshop-sdwan (USERXX is your Username) Use existing Storage account - it should auto populate with USERXX##########workshopsdwa (########## is a random string) Use existing File Share - type cloudshell Click &amp;ldquo;Attach Storage&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Task 2 - LB Rules for VPN Traffic</title>
      <link>/02demo1/3_task2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02demo1/3_task2.html</guid>
      <description>Task 2 - Create load balancing rules for IPSEC VPN Traffic Select the Hub External Load Balancer sdwan-USERXX-workshop-hub1-elb1
Click on Load balancing rules
Create Load balancing rules for UDP 500 and UDP 4500 - one rule for each</description>
    </item>
    
    <item>
      <title>Task 2 - Run Terraform</title>
      <link>/01gettingstarted/3_task2.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01gettingstarted/3_task2.html</guid>
      <description>Task 2 - Run the Terraform Code Perform the following step in your Cloudshell console to create your environment.
Clone the Github repo Change directory to the se-conf-sdwan-workshop/se-summit folder Initialize Terraform Create Terraform Plan Apply Terraform Plan Copy and paste these commands into your Cloudshell console. The terraform variable username will be populated with the value of the environment variable USER
git clone https://github.com/FortinetSecDevOps/se-conf-sdwan-workshop.git cd ./se-conf-sdwan-workshop/se-summit/ terraform init terraform plan -var=&amp;#34;username=${USER}&amp;#34; terraform apply -var=&amp;#34;username=${USER}&amp;#34; At the end of this step you should have the following architecture</description>
    </item>
    
    <item>
      <title>Task 3 - Hub and Spoke VPN Verification</title>
      <link>/02demo1/4_task3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02demo1/4_task3.html</guid>
      <description>Task 3 - Hub and Branch VPN Connectivity Verifications Verify that the FortiGates are responding to Azure Load Balancer Health Checks
Select the Hub External Load Balancer sdwan-USERXX-workshop-hub1-elb1
Click on Insights - Click the &amp;ldquo;Refresh&amp;rdquo; button a few times, eventually (~30 seconds) the FortiGate reachability will be indicated.
Verify that the VPN connections from the Branch to the Hub are UP
Verify that the BGP peering with the Hub is UP and that the Branch FortiGate learned the Hub and other Branches&amp;rsquo; CIDRs.</description>
    </item>
    
    <item>
      <title>task 3 - Terraform Verifications</title>
      <link>/01gettingstarted/4_task3.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01gettingstarted/4_task3.html</guid>
      <description>Task 3 - Terraform Verifications Using the Terraform output, verify that you have Web and SSH access to the FortiGates.
Terraform output can be redisplayed at any point as long as you are in the ./se-conf-sdwan-workshop/se-summit/ directory, by using the command terraform output
cd cd se-conf-sdwan-workshop/se-summit/ terraform output Connect to the Branch sites FortiGates and check the VPN status.
Connect to the Hub FortiGates and check the WAN IP</description>
    </item>
    
    <item>
      <title>Chapter 1 Quiz</title>
      <link>/01gettingstarted/5_chapter1quiz.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01gettingstarted/5_chapter1quiz.html</guid>
      <description>Chapter 1 - QUIZ FortiGates in the Hub do not have public IPs, how are they accessible via the Web UI?
Why are the VPN connections down?
FortiGates in the Hub do not have public IPs, how are they accessible via the Web UI?
The Public IPs on the external load balancers for the Hub, Branch1 and Branch2 FortiGates have inbound NAT rules setup. Why are the VPN connections down?</description>
    </item>
    
    <item>
      <title>Chapter 2 Quiz</title>
      <link>/02demo1/5_chapter2quiz.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02demo1/5_chapter2quiz.html</guid>
      <description>Chapter 2 - QUIZ Why is one FortiGate depicted as unhealthy by the Azure Hub External Load Balancer?
Why is NAT used to access the FortiGates, but for IPSEC VPN traffic Load balancing rules are used?
Do FortiGates in the Branches learn Spoke11 and Spoke12 CIDRs?
Why is one FortiGate depicted as unhealthy by the Azure Hub External Load Balancer?
The passive FortiGate does not respond to the load balancer health probes.</description>
    </item>
    
    <item>
      <title>Chapter 1 Discussion</title>
      <link>/01gettingstarted/6_chapter1discussion.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/01gettingstarted/6_chapter1discussion.html</guid>
      <description>Discussion Points During a Demo - Chapter 1 Fortinet provides a large library of infrastructure as code (IaC) templates to deploy baseline and iterate POC and production environments in public cloud. IaC support includes Terraform, Ansible, and cloud-specific services such as Azure ARM, AWS Cloudformation, and Google Deployment (jinja) templates. Terraform Providers are available for FortiGate and FortiManager to insert and iterate running configuration.
For more information, review the following:</description>
    </item>
    
    <item>
      <title>Chapter 2 Discussion</title>
      <link>/02demo1/6_ch2discussion.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/02demo1/6_ch2discussion.html</guid>
      <description>Discussion Points During a Dem - Chapter 2 When discussing load balanced traffic with the customer, point out key details about the Azure Load Balancers such as the following:
Azure LB uses 5-tuple hash for traffic distribution IPSec in an Active/Active configuration is not supported as session stability cannot be guaranteed to IkE rekeys, and deterministic IP termination. TCP/UDP headers are rewritten to the backend pool. HTTP/s headers are not changed.</description>
    </item>
    
  </channel>
</rss>
